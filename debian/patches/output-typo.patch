Description: Fix 'ouput' typo, replace with 'output'.
Author: Bas Couwenberg <sebastic@debian.org>
Forwarded: https://gmt.soest.hawaii.edu/issues/720

--- a/src/gmt_api.c
+++ b/src/gmt_api.c
@@ -2648,7 +2648,7 @@ int GMTAPI_Export_Grid (struct GMTAPI_CT
 			break;
 
 	 	case GMT_IS_DUPLICATE:	/* Duplicate GMT grid and header to a GMT_GRID container object. Subset allowed */
-			if (S_obj->resource) return (GMTAPI_report_error (API, GMT_PTR_NOT_NULL));	/* The ouput resource pointer must be NULL */
+			if (S_obj->resource) return (GMTAPI_report_error (API, GMT_PTR_NOT_NULL));	/* The output resource pointer must be NULL */
 			if (mode & GMT_GRID_HEADER_ONLY) return (GMTAPI_report_error (API, GMT_NOT_A_VALID_MODE));
 			GMT_Report (API, GMT_MSG_LONG_VERBOSE, "Duplicating grid data to GMT_GRID memory location\n");
 			if (!S_obj->region) {	/* No subset, possibly same padding */
--- a/src/gmt_io.h
+++ b/src/gmt_io.h
@@ -134,7 +134,7 @@ enum GMT_lon_enum {
 /* How to handle NaNs in records */
 
 enum GMT_io_nan_enum {
-	GMT_IO_NAN_OK = 0,	/* NaNs are fine; just ouput the record as is */
+	GMT_IO_NAN_OK = 0,	/* NaNs are fine; just output the record as is */
 	GMT_IO_NAN_SKIP,	/* -s[cols]	: Skip records with z == NaN in selected cols [z-col only] */
 	GMT_IO_NAN_KEEP,	/* -sr		: Skip records with z != NaN */
 	GMT_IO_NAN_ONE};	/* -sa		: Skip records with at least one NaN */
--- a/src/gmt_plot.c
+++ b/src/gmt_plot.c
@@ -3688,7 +3688,7 @@ int GMT_contlabel_save_begin (struct GMT
 		sprintf (record, "# %s%s%s%slabel", xname[kind], GMT->current.setting.io_col_separator, yname[kind], GMT->current.setting.io_col_separator);
 	if ((G->fp = GMT_fopen (GMT, G->label_file, GMT->current.io.w_mode)) == NULL) {
 		GMT_Report (GMT->parent, GMT_MSG_NORMAL, "Error: Unable to create/open file %s\n", G->label_file);
-		return (GMT_ERROR_ON_FOPEN);	/* Establishes data ouput */
+		return (GMT_ERROR_ON_FOPEN);	/* Establishes data output */
 	}
 	fprintf (G->fp, "%s\n", record);	/* Write hte header record */
 	for (seg = 0; seg < G->n_segments; seg++) {
--- a/src/mgd77/mgd77.c
+++ b/src/mgd77/mgd77.c
@@ -3934,7 +3934,7 @@ int MGD77_Select_Columns (struct GMT_CTR
 	if (option & MGD77_RESET_EXACT) F->n_exact = 0;
 	all_exact = (option & MGD77_SET_ALLEXACT);
 
-	i = pos = 0;		/* Start at the first ouput column */
+	i = pos = 0;		/* Start at the first output column */
 	while ((GMT_strtok (cstring, ",", &pos, p))) {	/* Until we run out of abbreviations */
 		/* Must check if we need to break this word into flag[=|<=|>=|<|>value] */
 		for (k = constraint = 0; p[k] && constraint == 0; k++) {
@@ -4016,7 +4016,7 @@ int MGD77_Select_Columns (struct GMT_CTR
 
 	F->n_out_columns = i;
 
-	i = pos = 0;		/* Start at the first ouput column */
+	i = pos = 0;		/* Start at the first output column */
 	while ((GMT_strtok (bstring, ",", &pos, p))) {	/* Until we run out of abbreviations */
 		if (p[0] == '+')
 			F->Bit_test[i].match = 1;
--- a/src/trend1d.c
+++ b/src/trend1d.c
@@ -591,7 +591,7 @@ int GMT_trend1d_parse (struct GMT_CTRL *
 	}
 	n_errors += GMT_check_condition (GMT, Ctrl->n_outputs == 0, "Syntax error -F option: Must specify at least one output columns \n");
 	n_errors += GMT_check_condition (GMT, Ctrl->n_outputs > 1 && Ctrl->model_parameters, 
-					"Syntax error -F option: When selecting model parameters, it must be the only ouput\n");
+					"Syntax error -F option: When selecting model parameters, it must be the only output\n");
 
 	return (n_errors ? GMT_PARSE_ERROR : GMT_OK);
 }
