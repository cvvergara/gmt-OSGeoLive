/*--------------------------------------------------------------------
 *
 *	grdmath_def.h [Generated by make_math.sh]
 *
 *	Copyright (c) 1991-2011 by P. Wessel and W. H. F. Smith
 *	See LICENSE.TXT file for copying and redistribution conditions.
 *
 *	This program is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation; version 2 or any later version.
 *
 *	This program is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	Contact info: gmt.soest.hawaii.edu
 *--------------------------------------------------------------------
 *	grdmath_def.h is automatically generated by make_math.sh;
 *	Do NOT edit manually!
 */

#define GRDMATH_N_OPERATORS	145

/* For backward compatibility: */

#define ADD	5
#define DIV	38
#define MUL	90
#define POW	101
#define SUB	129

/* Declare all functions to return void */

void grd_ABS(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=0 */
void grd_ACOS(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=1 */
void grd_ACOSH(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=2 */
void grd_ACOT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=3 */
void grd_ACSC(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=4 */
void grd_ADD(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=5 */
void grd_AND(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=6 */
void grd_ASEC(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=7 */
void grd_ASIN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=8 */
void grd_ASINH(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=9 */
void grd_ATAN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=10 */
void grd_ATAN2(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=11 */
void grd_ATANH(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=12 */
void grd_BEI(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=13 */
void grd_BER(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=14 */
void grd_CAZ(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=15 */
void grd_CBAZ(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=16 */
void grd_CDIST(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=17 */
void grd_CEIL(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=18 */
void grd_CHICRIT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=19 */
void grd_CHIDIST(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=20 */
void grd_CORRCOEFF(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=21 */
void grd_COS(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=22 */
void grd_COSD(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=23 */
void grd_COSH(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=24 */
void grd_COT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=25 */
void grd_COTD(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=26 */
void grd_CPOISS(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=27 */
void grd_CSC(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=28 */
void grd_CSCD(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=29 */
void grd_CURV(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=30 */
void grd_D2DX2(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=31 */
void grd_D2DXY(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=32 */
void grd_D2DY2(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=33 */
void grd_D2R(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=34 */
void grd_DDX(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=35 */
void grd_DDY(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=36 */
void grd_DILOG(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=37 */
void grd_DIV(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=38 */
void grd_DUP(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=39 */
void grd_EQ(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=40 */
void grd_ERF(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=41 */
void grd_ERFC(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=42 */
void grd_ERFINV(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=43 */
void grd_EXCH(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=44 */
void grd_EXP(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=45 */
void grd_EXTREMA(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=46 */
void grd_FACT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=47 */
void grd_FCRIT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=48 */
void grd_FDIST(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=49 */
void grd_FLIPLR(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=50 */
void grd_FLIPUD(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=51 */
void grd_FLOOR(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=52 */
void grd_FMOD(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=53 */
void grd_GE(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=54 */
void grd_GT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=55 */
void grd_HYPOT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=56 */
void grd_I0(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=57 */
void grd_I1(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=58 */
void grd_IN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=59 */
void grd_INRANGE(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=60 */
void grd_INSIDE(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=61 */
void grd_INV(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=62 */
void grd_ISNAN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=63 */
void grd_J0(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=64 */
void grd_J1(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=65 */
void grd_JN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=66 */
void grd_K0(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=67 */
void grd_K1(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=68 */
void grd_KEI(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=69 */
void grd_KER(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=70 */
void grd_KN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=71 */
void grd_KURT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=72 */
void grd_LDIST(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=73 */
void grd_LE(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=74 */
void grd_LMSSCL(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=75 */
void grd_LOG(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=76 */
void grd_LOG10(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=77 */
void grd_LOG1P(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=78 */
void grd_LOG2(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=79 */
void grd_LOWER(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=80 */
void grd_LRAND(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=81 */
void grd_LT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=82 */
void grd_MAD(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=83 */
void grd_MAX(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=84 */
void grd_MEAN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=85 */
void grd_MED(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=86 */
void grd_MIN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=87 */
void grd_MOD(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=88 */
void grd_MODE(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=89 */
void grd_MUL(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=90 */
void grd_NAN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=91 */
void grd_NEG(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=92 */
void grd_NEQ(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=93 */
void grd_NOT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=94 */
void grd_NRAND(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=95 */
void grd_OR(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=96 */
void grd_PDIST(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=97 */
void grd_PLM(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=98 */
void grd_PLMg(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=99 */
void grd_POP(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=100 */
void grd_POW(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=101 */
void grd_PQUANT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=102 */
void grd_PSI(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=103 */
void grd_PV(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=104 */
void grd_QV(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=105 */
void grd_R2(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=106 */
void grd_R2D(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=107 */
void grd_RAND(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=108 */
void grd_RINT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=109 */
void grd_ROTX(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=110 */
void grd_ROTY(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=111 */
void grd_SAZ(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=112 */
void grd_SBAZ(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=113 */
void grd_SDIST(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=114 */
void grd_SEC(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=115 */
void grd_SECD(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=116 */
void grd_SIGN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=117 */
void grd_SIN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=118 */
void grd_SINC(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=119 */
void grd_SIND(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=120 */
void grd_SINH(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=121 */
void grd_SKEW(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=122 */
void grd_SQR(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=123 */
void grd_SQRT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=124 */
void grd_STD(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=125 */
void grd_STEP(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=126 */
void grd_STEPX(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=127 */
void grd_STEPY(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=128 */
void grd_SUB(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=129 */
void grd_TAN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=130 */
void grd_TAND(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=131 */
void grd_TANH(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=132 */
void grd_TCRIT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=133 */
void grd_TDIST(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=134 */
void grd_TN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=135 */
void grd_UPPER(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=136 */
void grd_XOR(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=137 */
void grd_Y0(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=138 */
void grd_Y1(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=139 */
void grd_YLM(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=140 */
void grd_YLMg(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=141 */
void grd_YN(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=142 */
void grd_ZCRIT(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=143 */
void grd_ZDIST(struct GRDMATH_INFO *info, float *stack[], GMT_LONG *constant, double *factor, GMT_LONG last);		/* id=144 */

/* Declare operator array */

char *operator[GRDMATH_N_OPERATORS] = {
	"ABS",		/* id = 0 */
	"ACOS",		/* id = 1 */
	"ACOSH",		/* id = 2 */
	"ACOT",		/* id = 3 */
	"ACSC",		/* id = 4 */
	"ADD",		/* id = 5 */
	"AND",		/* id = 6 */
	"ASEC",		/* id = 7 */
	"ASIN",		/* id = 8 */
	"ASINH",		/* id = 9 */
	"ATAN",		/* id = 10 */
	"ATAN2",		/* id = 11 */
	"ATANH",		/* id = 12 */
	"BEI",		/* id = 13 */
	"BER",		/* id = 14 */
	"CAZ",		/* id = 15 */
	"CBAZ",		/* id = 16 */
	"CDIST",		/* id = 17 */
	"CEIL",		/* id = 18 */
	"CHICRIT",		/* id = 19 */
	"CHIDIST",		/* id = 20 */
	"CORRCOEFF",		/* id = 21 */
	"COS",		/* id = 22 */
	"COSD",		/* id = 23 */
	"COSH",		/* id = 24 */
	"COT",		/* id = 25 */
	"COTD",		/* id = 26 */
	"CPOISS",		/* id = 27 */
	"CSC",		/* id = 28 */
	"CSCD",		/* id = 29 */
	"CURV",		/* id = 30 */
	"D2DX2",		/* id = 31 */
	"D2DXY",		/* id = 32 */
	"D2DY2",		/* id = 33 */
	"D2R",		/* id = 34 */
	"DDX",		/* id = 35 */
	"DDY",		/* id = 36 */
	"DILOG",		/* id = 37 */
	"DIV",		/* id = 38 */
	"DUP",		/* id = 39 */
	"EQ",		/* id = 40 */
	"ERF",		/* id = 41 */
	"ERFC",		/* id = 42 */
	"ERFINV",		/* id = 43 */
	"EXCH",		/* id = 44 */
	"EXP",		/* id = 45 */
	"EXTREMA",		/* id = 46 */
	"FACT",		/* id = 47 */
	"FCRIT",		/* id = 48 */
	"FDIST",		/* id = 49 */
	"FLIPLR",		/* id = 50 */
	"FLIPUD",		/* id = 51 */
	"FLOOR",		/* id = 52 */
	"FMOD",		/* id = 53 */
	"GE",		/* id = 54 */
	"GT",		/* id = 55 */
	"HYPOT",		/* id = 56 */
	"I0",		/* id = 57 */
	"I1",		/* id = 58 */
	"IN",		/* id = 59 */
	"INRANGE",		/* id = 60 */
	"INSIDE",		/* id = 61 */
	"INV",		/* id = 62 */
	"ISNAN",		/* id = 63 */
	"J0",		/* id = 64 */
	"J1",		/* id = 65 */
	"JN",		/* id = 66 */
	"K0",		/* id = 67 */
	"K1",		/* id = 68 */
	"KEI",		/* id = 69 */
	"KER",		/* id = 70 */
	"KN",		/* id = 71 */
	"KURT",		/* id = 72 */
	"LDIST",		/* id = 73 */
	"LE",		/* id = 74 */
	"LMSSCL",		/* id = 75 */
	"LOG",		/* id = 76 */
	"LOG10",		/* id = 77 */
	"LOG1P",		/* id = 78 */
	"LOG2",		/* id = 79 */
	"LOWER",		/* id = 80 */
	"LRAND",		/* id = 81 */
	"LT",		/* id = 82 */
	"MAD",		/* id = 83 */
	"MAX",		/* id = 84 */
	"MEAN",		/* id = 85 */
	"MED",		/* id = 86 */
	"MIN",		/* id = 87 */
	"MOD",		/* id = 88 */
	"MODE",		/* id = 89 */
	"MUL",		/* id = 90 */
	"NAN",		/* id = 91 */
	"NEG",		/* id = 92 */
	"NEQ",		/* id = 93 */
	"NOT",		/* id = 94 */
	"NRAND",		/* id = 95 */
	"OR",		/* id = 96 */
	"PDIST",		/* id = 97 */
	"PLM",		/* id = 98 */
	"PLMg",		/* id = 99 */
	"POP",		/* id = 100 */
	"POW",		/* id = 101 */
	"PQUANT",		/* id = 102 */
	"PSI",		/* id = 103 */
	"PV",		/* id = 104 */
	"QV",		/* id = 105 */
	"R2",		/* id = 106 */
	"R2D",		/* id = 107 */
	"RAND",		/* id = 108 */
	"RINT",		/* id = 109 */
	"ROTX",		/* id = 110 */
	"ROTY",		/* id = 111 */
	"SAZ",		/* id = 112 */
	"SBAZ",		/* id = 113 */
	"SDIST",		/* id = 114 */
	"SEC",		/* id = 115 */
	"SECD",		/* id = 116 */
	"SIGN",		/* id = 117 */
	"SIN",		/* id = 118 */
	"SINC",		/* id = 119 */
	"SIND",		/* id = 120 */
	"SINH",		/* id = 121 */
	"SKEW",		/* id = 122 */
	"SQR",		/* id = 123 */
	"SQRT",		/* id = 124 */
	"STD",		/* id = 125 */
	"STEP",		/* id = 126 */
	"STEPX",		/* id = 127 */
	"STEPY",		/* id = 128 */
	"SUB",		/* id = 129 */
	"TAN",		/* id = 130 */
	"TAND",		/* id = 131 */
	"TANH",		/* id = 132 */
	"TCRIT",		/* id = 133 */
	"TDIST",		/* id = 134 */
	"TN",		/* id = 135 */
	"UPPER",		/* id = 136 */
	"XOR",		/* id = 137 */
	"Y0",		/* id = 138 */
	"Y1",		/* id = 139 */
	"YLM",		/* id = 140 */
	"YLMg",		/* id = 141 */
	"YN",		/* id = 142 */
	"ZCRIT",		/* id = 143 */
	"ZDIST"		/* id = 144 */
};

